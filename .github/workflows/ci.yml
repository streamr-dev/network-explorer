name: Lint, test & deploy docker image

on: [push]

jobs:
  test:
    name: Lint and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set npm access token
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build app
        run: npm run build --if-present
      - name: Run tests
        run: npm run test

  docker:
    needs: [test]
    name: Publish Docker images
    runs-on: ubuntu-latest

    # run job only for master and tags
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Set npm access token
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
      - name: Get version string from git tag name
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Print version string
        run: echo ${{ steps.get_version.outputs.VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build --if-present
      - name: Build Docker image
        run: docker build -t $OWNER/$IMAGE_NAME:local --build-arg NPM_AUTH_TOKEN=${{ secrets.NPM_AUTH_TOKEN }} .
      - name: Smoke test image
        run: .ci_scripts/smoke_test.sh
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push streamr/network-explorer:dev
        run: .ci_scripts/deploy_docker.sh dev
      - name: Push streamr/network-explorer:${{ steps.get_version.outputs.VERSION }}
        run: .ci_scripts/deploy_docker.sh production ${{ steps.get_version.outputs.VERSION }}
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    env:
      OWNER: streamr
      IMAGE_NAME: network-explorer
